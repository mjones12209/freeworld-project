{"version":3,"sources":["DemoData/data.js","App.js","reportWebVitals.js","index.js","App.module.css"],"names":["hourlyPotentialEarningsFunc","this","earningsPotential","instructionHoursNeeded","columns","field","headerName","width","hide","editable","type","demoData","id","studentForConsideration","App","useEffect","data","JSON","parse","localStorage","getItem","maxCreditHours","unstringifyData","map","row","setRows","setMaxCreditHours","useState","maxEarnings","setMaxEarnings","studentsSelected","setStudentsSelected","rows","setStudentData","stringifyData","setItem","stringify","sortedArray","slice","sort","a","b","chosenStudents","reduce","previousValue","currentValue","currentIndex","array","push","selectedStudents","student","index","length","calculateMaxEarnings","style","height","Grid","container","className","styles","gridContainer","item","xs","TextField","value","onChange","e","newRows","target","i","filter","label","variant","loading","onCellEditCommit","params","parseInt","String","pageSize","rowsPerPageOptions","answerDiv","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.3d3cf445.chunk.js","sourcesContent":["export function hourlyPotentialEarningsFunc() {\n  return this.earningsPotential / this.instructionHoursNeeded;\n}\n\nexport const columns = [\n    { field: \"id\", headerName: \"ID\", width: 110, hide: true },\n    {\n      field: \"studentForConsideration\",\n      headerName: \"Student for Consideration\",\n      width: 239,\n      editable: true,\n    },\n    {\n      field: \"earningsPotential\",\n      headerName: \"Earnings Potential\",\n      width: 200,\n      editable: true,\n    },\n    {\n      field: \"instructionHoursNeeded\",\n      headerName: \"Instruction Hours Needed\",\n      type: \"number\",\n      width: 240,\n      editable: true,\n    },\n  ];\n\n\nexport const demoData = [\n  {\n    id: 1,\n    studentForConsideration: \"Jane\",\n    earningsPotential: 1000,\n    instructionHoursNeeded: 3,\n    hourlyPotentialEarningsFunc,\n  },\n  {\n    id: 2,\n    studentForConsideration: \"Bob\",\n    earningsPotential: 3000,\n    instructionHoursNeeded: 5,\n    hourlyPotentialEarningsFunc,\n  },\n  {\n    id: 3,\n    studentForConsideration: \"Mark\",\n    earningsPotential: 2700,\n    instructionHoursNeeded: 4,\n    hourlyPotentialEarningsFunc,\n  },\n  {\n    id: 4,\n    studentForConsideration: \"Jill\",\n    earningsPotential: 5000,\n    instructionHoursNeeded: 8,\n    hourlyPotentialEarningsFunc,\n  },\n  {\n    id: 5,\n    studentForConsideration: \"Don\",\n    earningsPotential: 3600,\n    instructionHoursNeeded: 5,\n    hourlyPotentialEarningsFunc,\n  },\n];\n","import { useEffect, useState } from \"react\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport { Grid, TextField } from \"@material-ui/core\";\nimport styles from \"./App.module.css\";\nimport { hourlyPotentialEarningsFunc, demoData, columns } from './DemoData/data';\n\nexport default function App() {\n\n  useEffect(() => {\n    let data = JSON.parse(localStorage.getItem(\"studentData\"));\n    let maxCreditHours = localStorage.getItem(\"maxCreditHours\");\n    if (data) {\n      const unstringifyData = data.map((row) => {\n        return {\n          ...row,\n          hourlyPotentialEarningsFunc\n        };\n      });\n      setRows(unstringifyData);\n    }\n    if (maxCreditHours) {\n      setMaxCreditHours(maxCreditHours);\n    }\n  }, []);\n\n  const [maxEarnings, setMaxEarnings] = useState();\n  const [maxCreditHours, setMaxCreditHours] = useState(20);\n  const [studentsSelected, setStudentsSelected] = useState([]);\n  const [rows, setRows] = useState(demoData);\n\n  const setStudentData = (data) => {\n    setRows(data);\n    const stringifyData = data.map(row => {\n      return {\n        ...row,\n        hourlyPotentialEarningsFunc: null\n      }\n    })\n    localStorage.setItem(\"studentData\", JSON.stringify(stringifyData));\n  };\n\n  const handleChange = (params) => {\n    const newRows = rows.map((row) => {\n      if (row.id === params.id) {\n        let value;\n        if (\n          params.field === \"earningsPotential\" ||\n          params.field === \"instructionHoursNeeded\"\n        ) {\n          value = parseInt(params.value);\n        } else {\n          value = String(params.value);\n        }\n        return { ...row, [params.field]: value };\n      } else {\n        return row;\n      }\n    });\n    setStudentData(newRows);\n  };\n\n  const handleNumOfStudents = (e) => {\n    let newRows = rows.slice();\n    if (rows.length < e.target.value) {\n      for (let i = 0; i < e.target.value - rows.length; i++) {\n        newRows.push({\n          id: newRows.length + 1,\n          studentForConsideration: 'Please Enter Student Name',\n          earningsPotential: 0,\n          instructionHoursNeeded: 0,\n          hourlyPotentialEarningsFunc,\n        });\n      }\n    } else if (rows.length > e.target.value) {\n      newRows = rows.filter((row) => row.id <= e.target.value);\n    }\n    setStudentData(newRows);\n  };\n\n  const handleMaxCreditHours = (e) => {\n    setMaxCreditHours(e.target.value);\n    localStorage.setItem(\"maxCreditHours\", e.target.value);\n  };\n\n  useEffect(() => {\n    const calculateMaxEarnings = () => {\n      const compare = (a, b) => {\n        if (a.hourlyPotentialEarningsFunc() < b.hourlyPotentialEarningsFunc()) {\n          return 1;\n        }\n        if (a.hourlyPotentialEarningsFunc() > b.hourlyPotentialEarningsFunc()) {\n          return -1;\n        }\n      };\n\n      const sortedArray = rows.slice().sort(compare);\n\n      let chosenStudents = [];\n      sortedArray.reduce(\n        (previousValue, currentValue, currentIndex, array) => {\n          if (\n            !(previousValue <= maxCreditHours) ||\n            ((previousValue + currentValue.instructionHoursNeeded) >= maxCreditHours)\n          ) {\n            if(previousValue + currentValue.instructionHoursNeeded <= maxCreditHours) {\n              chosenStudents.push(currentValue);\n            }\n            return previousValue;\n          } else {\n            chosenStudents.push(currentValue);\n            return previousValue + currentValue.instructionHoursNeeded;\n          }\n        },\n        0\n      );\n\n      const maxEarnings = chosenStudents.reduce((previousValue, currentValue) => {\n        return previousValue + currentValue.earningsPotential;\n      }, 0);\n\n      setMaxEarnings(maxEarnings);\n\n      const selectedStudents = chosenStudents.map((student, index) => {\n        if (index < chosenStudents.length - 1) {\n          return student.studentForConsideration + \", \";\n        } else if (index === chosenStudents.length - 1) {\n          return ` and ${student.studentForConsideration}`;\n        } else {\n          return null;\n        }\n      });\n\n      setStudentsSelected(selectedStudents);\n    };\n\n    calculateMaxEarnings();\n  }, [maxCreditHours, rows]);\n\n  return (\n    <div style={{ height: 400, width: \"100%\" }}>\n      <Grid container className={styles.gridContainer}>\n        <Grid item xs={2}>\n          <TextField\n            value={rows.length}\n            onChange={handleNumOfStudents}\n            label=\"Number of Students\"\n            variant=\"outlined\"\n          />\n        </Grid>\n        <Grid item xs={2}>\n          <TextField\n            value={maxCreditHours}\n            onChange={handleMaxCreditHours}\n            label=\"Max Credit Hours\"\n            variant=\"outlined\"\n          />\n        </Grid>\n      </Grid>\n\n      <DataGrid\n        rows={rows}\n        loading={rows.length === 0}\n        onCellEditCommit={handleChange}\n        columns={columns}\n        pageSize={5}\n        rowsPerPageOptions={[5]}\n      />\n\n      <div className={styles.answerDiv}>\n        Max Earnings of {maxEarnings} with {studentsSelected}\n      </div>\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"answerDiv\":\"App_answerDiv__2G5Bg\",\"gridContainer\":\"App_gridContainer__20VCH\"};"],"sourceRoot":""}